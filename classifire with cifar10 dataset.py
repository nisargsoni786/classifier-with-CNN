# -*- coding: utf-8 -*-
"""1st classify cifar10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zdSJKAqgwvwp2TszbHwn7arq6fT-D_FH
"""

from keras.datasets import cifar10
(x_train,y_train),(x_test,y_test)=cifar10.load_data()

print(type(x_train))



print(x_train.shape)

import matplotlib.pyplot as plt

img=plt.imshow(x_train[0])

from keras.utils import to_categorical
y_train_one_hot=to_categorical(y_train)
y_test_one_hot=to_categorical(y_test)

x_train=x_train/255
x_test=x_test/255

from keras.models import Sequential
from keras.layers import Dense,Flatten,Conv2D,  MaxPooling2D

#create architecture
model=Sequential()

#convolution layer
model.add(Conv2D(32,(5,5),activation='relu',input_shape=(32,32,3)))

#maxpooling layer
model.add(MaxPooling2D(pool_size=(2,2)))

#convolution layer
model.add(Conv2D(32,(5,5),activation='relu'))

#maxpooling layer 
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(1000,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

hist=model.fit(x_train,y_train_one_hot,batch_size=256,epochs=10,validation_split=0.3)

model.evaluate(x_test,y_test_one_hot)[1]

plt.plot(hist.history['acc'])
plt.plot(hist.history['val_acc'])
plt.legend(['train','val'])
plt.show()

plt.plot(hist.history['loss'])
plt.plot(hist.history['val_loss'])
plt.legend(['train','val'])
plt.show()

from google.colab import files
uploaded=files.upload()
my_image=plt.imread('IMG_6160.JPG')

img=plt.imshow(my_image)

from skimage.transform import resize
x=resize(my_image,(32,32,3))
img=plt.imshow(x)

import numpy as np
probabilities=model.predict(np.array([x,]))

probabilities

noc=['a','b','c','d','e','f','g','h','i','j']
ind=np.argsort(probabilities[0,:])
print('most likely class',noc[ind[9]],' and efficiency',probabilities[0,ind[9]])